<!--
Copyright 2011 Normation SAS

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.normation</groupId>
  <artifactId>parent-pom</artifactId>
  <version>3.0.0~beta1</version>
  <packaging>pom</packaging>
  
  <!-- ====================================  PROJECT INFORMATION  ==================================== -->
  
  <description>
    This is the master parent pom, which knows all common dependencies, generic infos about resources,users.
    For now, it includes (Normation) private resources. 
  </description>
  
  <organization>
    <name>Normation SAS</name>
    <url>http://www.normation.com/</url>
  </organization>

  <developers>
    <developer>
      <id>ncharles</id>
      <name>Nicolas Charles</name>
      <timezone>+1</timezone>
      <email>nicolas.charles [at] normation.com</email>
    </developer>
    <developer>
      <id>fanf42</id>
      <name>Francois Armand</name>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>jooooooon</id>
      <name>Jonathan Clarke</name>
      <timezone>+1</timezone>
    </developer>
  </developers>
  
  <!-- ====================================  /PROJECT INFORMATION  ==================================== -->
  
  <!-- ====================================  PROJECT REPOS  ==================================== -->

  <repositories>
    <repository>
      <id>maven_central</id>
      <name>Default maven repository</name>
      <url>http://repo1.maven.org/maven2/</url>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>rudder-project</id>
      <url>http://www.rudder-project.org/maven-repo/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <!-- ====================================  /PROJECT REPOS  ==================================== -->

  <!-- ====================================  PROJECT BUILD  ==================================== -->

  <distributionManagement>
    <snapshotRepository>
      <id>snapshots.nexus.normation.com</id>
      <name>Normation internal nexus repository for snapshots</name>
      <url>http://nexus.normation.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>releases.nexus.normation.com</id>
      <name>Normation internal nexus repository for release</name>
      <url>http://nexus.normation.com/nexus/content/repositories/releases</url>
    </repository>
  </distributionManagement>

  <reporting>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>${scala-maven-plugin-version}</version> 
      </plugin>
    </plugins>
  </reporting>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.6</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>

        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.1</version>

        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
       </plugin>
       <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>${scala-maven-plugin-version}</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaCompatVersion>${scala-binary-version}</scalaCompatVersion>
          <args>
            <arg>-target:jvm-1.7</arg>
            <arg>-dependencyfile</arg>
            <arg>${basedir}/.scala_dependencies</arg>
          </args>
          <jvmArgs>
            <jvmArg>-server</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>jrebel-maven-plugin</artifactId>
        <version>1.1.3</version>
        <executions>
          <execution>
            <id>generate-rebel-xml</id>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>1.4.1</version>
              <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.eclipse.m2e</groupId>
        <artifactId>lifecycle-mapping</artifactId>
        <version>1.0.0</version>
        <configuration>
          <lifecycleMappingMetadata>
            <pluginExecutions>
              <pluginExecution>
                <pluginExecutionFilter>
                  <groupId>org.zeroturnaround</groupId>
                  <artifactId>jrebel-maven-plugin</artifactId>
                  <versionRange>[0.1,)</versionRange>
                  <goals>
                    <goal>generate</goal>
                  </goals>
                </pluginExecutionFilter>
                <action>
                  <execute/>
                </action>
              </pluginExecution>
              <pluginExecution>
                <pluginExecutionFilter>
                  <groupId>net.alchim31.maven</groupId>
                  <artifactId>scala-maven-plugin</artifactId>
                  <versionRange>[0.1,)</versionRange>
                  <goals>
                    <goal>add-source</goal>
                    <goal>compile</goal>
                    <goal>testCompile</goal>              
                  </goals>
                </pluginExecutionFilter>
                <action>
                  <configurator>
                    <id>org.maven.ide.eclipse.scala</id>
                  </configurator>                  
                </action>
              </pluginExecution>
            </pluginExecutions>
          </lifecycleMappingMetadata>
        </configuration>
      </plugin>
    </plugins>
    </pluginManagement>
  </build>
  
  <!-- ====================================  /PROJECT BUILD  ==================================== -->
  
  <!-- ==================================== PROJECT PROPERTIES  ==================================== -->
 
  <properties>
    <!-- we use UTF-8 for everything -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Maven plugin version -->
    <scala-maven-plugin-version>3.1.6</scala-maven-plugin-version>

    <!-- Libraries version that MUST be used in all children project -->

    <rudder-version>3.0.0~beta1</rudder-version>
    <spring-run-dep-version>3.0.0~beta1</spring-run-dep-version>
    
    <scala-version>2.10.4</scala-version>
    <scala-binary-version>2.10</scala-binary-version>
    <lift-version>2.5.1</lift-version>
    <slf4j-version>1.7.7</slf4j-version>
    <logback-version>1.1.2</logback-version>
    <junit-version>4.11</junit-version>
    <jodatime-version>2.3</jodatime-version>
    <jodaconvert-version>1.6</jodaconvert-version>
    <commons-io-version>2.4</commons-io-version>
    <commons-codec-version>1.9</commons-codec-version>
    <commons-lang-version>2.6</commons-lang-version>
    <specs2-version>2.3.12</specs2-version>
    <spring-version>3.2.9.RELEASE</spring-version>
    <spring-security-version>3.2.4.RELEASE</spring-security-version>
    <squeryl-version>0.9.5-6</squeryl-version>
    <jgit-version>3.4.1.201406201815-r</jgit-version>
    <cglib-version>3.1</cglib-version>
  </properties>
  
  <!-- ==================================== PROJECT DEPENDENCIES  ==================================== -->
  
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-version}</version>
    </dependency>
    
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${jodatime-version}</version>
    </dependency>
    <!-- 
         The Scala compiler require to be able to find these symbol even if they are not used. 
         So we mark them as needed for compilation, but "provided" so that it does not go into
         the final jars. 
     -->
    <dependency>
      <groupId>org.joda</groupId>
      <artifactId>joda-convert</artifactId>
      <version>${jodaconvert-version}</version>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-common_${scala-binary-version}</artifactId>
      <version>${lift-version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!--
      We use SLF4J log facade with logback implementation
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
    </dependency>

    <!--  test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit-version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.specs2</groupId>
      <artifactId>specs2_${scala-binary-version}</artifactId>
      <version>${specs2-version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- 
        included to use slf4j native backend 
        If you want to use another backend, 
        exclude these dependencies from parent
    -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>
    
    <!-- 
        If you need to use Spring, you will HAVE TO include that first dependency 
        or com.normation.spring-run-dependencies pom
    -->
    <!-- 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring-version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    -->

  </dependencies>
</project>
